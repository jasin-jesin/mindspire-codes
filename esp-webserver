 1 // Simple ESP32 WebServer LED control
 2 #include <WiFi.h>
 3 #include <WebServer.h>
 4 
 5 const char* WIFI_SSID     = "YOUR_SSID";
 6 const char* WIFI_PASSWORD = "YOUR_PASSWORD";
 7 
 8 // Change this to your LED pin. Many ESP32 dev boards use GPIO 2 for the onboard LED.
 9 const int LED_PIN = 2;
10 
11 WebServer server(80);
12 
13 String html() {
14   int val = digitalRead(LED_PIN);
15   String state = val ? "ON" : "OFF";
16   return String(
17     "<!DOCTYPE html><html><head><meta name='viewport' content='width=device-width, initial-scale=1'/>"
18     "<style>body{font-family:sans-serif;text-align:center;margin-top:40px}"
19     "a{display:inline-block;margin:8px;padding:10px 18px;border:1px solid #aaa;border-radius:8px;text-decoration:none}</style>"
20     "</head><body>"
21     "<h2>ESP32 LED Control</h2>"
22     "<p>LED is <b>") + state + "</b></p>"
23     "<a href='/on'>Turn ON</a>"
24     "<a href='/off'>Turn OFF</a>"
25     "<a href='/toggle'>Toggle</a>"
26     "</body></html>";
27 }
28 
29 void handleRoot()   { server.send(200, "text/html", html()); }
30 void handleOn()     { digitalWrite(LED_PIN, HIGH); server.sendHeader("Location", "/"); server.send(303); }
31 void handleOff()    { digitalWrite(LED_PIN, LOW);  server.sendHeader("Location", "/"); server.send(303); }
32 void handleToggle() {
33   digitalWrite(LED_PIN, !digitalRead(LED_PIN));
34   server.sendHeader("Location", "/");
35   server.send(303);
36 }
37 
38 void setup() {
39   pinMode(LED_PIN, OUTPUT);
40   digitalWrite(LED_PIN, LOW);
41 
42   Serial.begin(115200);
43   WiFi.mode(WIFI_STA);
44   WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
45   Serial.print("Connecting to WiFi");
46   while (WiFi.status() != WL_CONNECTED) { delay(400); Serial.print("."); }
47   Serial.println();
48   Serial.print("IP address: ");
49   Serial.println(WiFi.localIP());
50 
51   server.on("/", handleRoot);
52   server.on("/on", handleOn);
53   server.on("/off", handleOff);
54   server.on("/toggle", handleToggle);
55   server.begin();
56   Serial.println("HTTP server started");
57 }
58 
59 void loop() {
60   server.handleClient();
61 }
